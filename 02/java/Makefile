JFLAGS += 
JC = javac

info:
	@echo
	@printf 'Type e.g., "make auto"  to create "auto.class" from auto.java\n'
	@printf 'Type       "make all"   to create every class file\n'
	@printf 'Type       "make clean" to delete every class file\n\n'

Concat: Concat.java
	-$(JC) $(JFLAGS) Concat.java
	@printf "Now type java Concat to execute the result\n\n"

Constants: Constants.java
	-$(JC) $(JFLAGS) Constants.java
	@printf "Now type java Constants to execute the result\n\n"

Equals: Equals.java
	-$(JC) $(JFLAGS) Equals.java
	@printf "Now type java Equals to execute the result\n\n"

Formatter: Formatter.java
	-$(JC) $(JFLAGS) Formatter.java
	@printf "Now type java Formatter to execute the result\n\n"

GPA: GPA.java
	-$(JC) $(JFLAGS) GPA.java
	@printf "Now type java GPA to execute the result\n\n"

Hello: Hello.java
	-$(JC) $(JFLAGS) Hello.java
	@printf "Now type java Hello to execute the result\n\n"

JavaInput: JavaInput.java
	-$(JC) $(JFLAGS) JavaInput.java
	@printf "Now type java JavaInput to execute the result\n\n"

Overflow: Overflow.java
	-$(JC) $(JFLAGS) Overflow.java
	@printf "Now type java Overflow to execute the result\n\n"

PassByValue: PassByValue.java
	-$(JC) $(JFLAGS) PassByValue.java
	@printf "Now type java PassByValue to execute the result\n\n"

Printf: Printf.java
	-$(JC) $(JFLAGS) Printf.java
	@printf "Now type java Printf to execute the result\n\n"

Switch: Switch.java
	-$(JC) $(JFLAGS) Switch.java
	@printf "Now type java Switch to execute the result\n\n"

WhoDat: WhoDat.java
	-$(JC) $(JFLAGS) WhoDat.java
	@printf "Now type java WhoDat to execute the result\n\n"

all:  Concat Constants Equals Formatter GPA Hello JavaInput Overflow PassByValue Printf Switch WhoDat

clean:
	rm -f *.class  Concat Constants Equals Formatter GPA Hello JavaInput Overflow PassByValue Printf Switch WhoDat

